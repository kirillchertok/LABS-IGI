# Generated by Django 5.0.4 on 2024-05-06 21:18

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, help_text='Unique ID', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата добавления')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата последнего обновления')),
                ('name', models.CharField(help_text='Name', max_length=50)),
                ('phone', models.CharField(help_text='Phone number', max_length=13, unique=True)),
                ('email', models.EmailField(help_text='Email', max_length=254, unique=True)),
                ('password', models.CharField(help_text='Password', max_length=300)),
            ],
            options={
                'db_table': 'customers_table',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, help_text='Unique ID', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата добавления')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата последнего обновления')),
                ('code', models.CharField(help_text='Код скидки', max_length=50)),
                ('amount', models.SmallIntegerField(help_text='Размер скидки')),
                ('is_active', models.BooleanField(default=False, help_text='Активен')),
            ],
            options={
                'db_table': 'sale_codes_table',
                'ordering': ['is_active', 'code'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, help_text='Unique ID', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата добавления')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата последнего обновления')),
                ('name', models.CharField(help_text='Name', max_length=50)),
                ('phone', models.CharField(help_text='Phone number', max_length=13, unique=True)),
                ('email', models.EmailField(help_text='Email', max_length=254, unique=True)),
                ('password', models.CharField(help_text='Password', max_length=300)),
                ('is_admin', models.BooleanField(help_text='Админ/Сотрудник')),
            ],
            options={
                'db_table': 'employees_table',
                'ordering': ['-is_admin', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, help_text='Unique ID', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата добавления')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата последнего обновления')),
                ('name', models.TextField(help_text='Имя изделия')),
                ('price', models.FloatField(help_text='Цена изделия')),
                ('description', models.TextField(help_text='Описание изделия')),
                ('amount', models.PositiveIntegerField(help_text='Количество на складе')),
                ('buyed', models.PositiveIntegerField(help_text='Всего заказано')),
            ],
            options={
                'db_table': 'products_table',
                'ordering': ['-price'],
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, help_text='Unique ID', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата добавления')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата последнего обновления')),
                ('type', models.TextField(help_text='Вид изделия', unique=True)),
            ],
            options={
                'db_table': 'type_table',
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, help_text='Unique ID', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата добавления')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата последнего обновления')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.customer')),
                ('products', models.ManyToManyField(help_text='Список заказанных изделий', to='main.product')),
            ],
            options={
                'db_table': 'orders_table',
                'ordering': ['customer'],
            },
        ),
        migrations.CreateModel(
            name='OrderInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, help_text='Unique ID', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата добавления')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата последнего обновления')),
                ('status', models.BooleanField(default=False, help_text='Статус заказа')),
                ('delivery_date', models.DateTimeField(help_text='Дата доставки')),
                ('delivery_address', models.TextField(default='Minsk, ', help_text='Адрес доставки')),
                ('amount_of_money', models.PositiveIntegerField(help_text='Сумма заказа')),
                ('discount', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.discount')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.order')),
            ],
            options={
                'db_table': 'orders_info_table',
                'ordering': ['delivery_date'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.producttype'),
        ),
    ]
